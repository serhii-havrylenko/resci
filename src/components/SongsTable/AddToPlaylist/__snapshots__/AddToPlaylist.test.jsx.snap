// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddToPlaylist /> tests should match snapshot 1`] = `
<WithStyles(AddToPlaylist)
  onAddToPlaylist={[MockFunction]}
  playlists={
    Array [
      Object {
        "id": "1",
        "name": "Death metal",
      },
      Object {
        "id": "2",
        "name": "Trance",
      },
    ]
  }
  songId="123"
>
  <AddToPlaylist
    classes={
      Object {
        "link": "AddToPlaylist-link-1",
      }
    }
    onAddToPlaylist={[MockFunction]}
    playlists={
      Array [
        Object {
          "id": "1",
          "name": "Death metal",
        },
        Object {
          "id": "2",
          "name": "Trance",
        },
      ]
    }
    songId="123"
  >
    <div>
      <WithStyles(IconButton)
        aria-haspopup="true"
        buttonRef={[Function]}
        onClick={[Function]}
      >
        <IconButton
          aria-haspopup="true"
          buttonRef={[Function]}
          classes={
            Object {
              "colorInherit": "MuiIconButton-colorInherit-3",
              "colorPrimary": "MuiIconButton-colorPrimary-4",
              "colorSecondary": "MuiIconButton-colorSecondary-5",
              "disabled": "MuiIconButton-disabled-6",
              "label": "MuiIconButton-label-7",
              "root": "MuiIconButton-root-2",
            }
          }
          color="default"
          disabled={false}
          onClick={[Function]}
        >
          <WithStyles(ButtonBase)
            aria-haspopup="true"
            buttonRef={[Function]}
            centerRipple={true}
            className="MuiIconButton-root-2"
            disabled={false}
            focusRipple={true}
            onClick={[Function]}
          >
            <ButtonBase
              aria-haspopup="true"
              buttonRef={[Function]}
              centerRipple={true}
              className="MuiIconButton-root-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-9",
                  "focusVisible": "MuiButtonBase-focusVisible-10",
                  "root": "MuiButtonBase-root-8",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                aria-haspopup="true"
                className="MuiButtonBase-root-8 MuiIconButton-root-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiIconButton-label-7"
                >
                  <pure(PlaylistAddIcon)>
                    <PlaylistAddIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-14",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-16",
                              "colorError": "MuiSvgIcon-colorError-15",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-12",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-13",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-17",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-19",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-18",
                              "root": "MuiSvgIcon-root-11",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-11"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0z"
                              fill="none"
                            />
                            <path
                              d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </PlaylistAddIcon>
                  </pure(PlaylistAddIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={true}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={true}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-24",
                          "childLeaving": "MuiTouchRipple-childLeaving-25",
                          "childPulsate": "MuiTouchRipple-childPulsate-26",
                          "ripple": "MuiTouchRipple-ripple-21",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-23",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-22",
                          "root": "MuiTouchRipple-root-20",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-20"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-20"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </IconButton>
      </WithStyles(IconButton)>
      <Popper
        disablePortal={false}
        open={false}
        placement="bottom"
        transition={true}
      />
    </div>
  </AddToPlaylist>
</WithStyles(AddToPlaylist)>
`;

exports[`<AddToPlaylist /> tests should match snapshot for open popup 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <WithStyles(AddToPlaylist)
    onAddToPlaylist={[MockFunction]}
    playlists={
      Array [
        Object {
          "id": "1",
          "name": "Death metal",
        },
        Object {
          "id": "2",
          "name": "Trance",
        },
      ]
    }
    songId="123"
  >
    <AddToPlaylist
      classes={
        Object {
          "link": "AddToPlaylist-link-1",
        }
      }
      onAddToPlaylist={[MockFunction]}
      playlists={
        Array [
          Object {
            "id": "1",
            "name": "Death metal",
          },
          Object {
            "id": "2",
            "name": "Trance",
          },
        ]
      }
      songId="123"
    >
      <div>
        <WithStyles(IconButton)
          aria-haspopup="true"
          aria-owns="menu-list-grow"
          buttonRef={[Function]}
          onClick={[Function]}
        >
          <IconButton
            aria-haspopup="true"
            aria-owns="menu-list-grow"
            buttonRef={[Function]}
            classes={
              Object {
                "colorInherit": "MuiIconButton-colorInherit-3",
                "colorPrimary": "MuiIconButton-colorPrimary-4",
                "colorSecondary": "MuiIconButton-colorSecondary-5",
                "disabled": "MuiIconButton-disabled-6",
                "label": "MuiIconButton-label-7",
                "root": "MuiIconButton-root-2",
              }
            }
            color="default"
            disabled={false}
            onClick={[Function]}
          >
            <WithStyles(ButtonBase)
              aria-haspopup="true"
              aria-owns="menu-list-grow"
              buttonRef={[Function]}
              centerRipple={true}
              className="MuiIconButton-root-2"
              disabled={false}
              focusRipple={true}
              onClick={[Function]}
            >
              <ButtonBase
                aria-haspopup="true"
                aria-owns="menu-list-grow"
                buttonRef={[Function]}
                centerRipple={true}
                className="MuiIconButton-root-2"
                classes={
                  Object {
                    "disabled": "MuiButtonBase-disabled-9",
                    "focusVisible": "MuiButtonBase-focusVisible-10",
                    "root": "MuiButtonBase-root-8",
                  }
                }
                component="button"
                disableRipple={false}
                disableTouchRipple={false}
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                tabIndex="0"
                type="button"
              >
                <button
                  aria-haspopup="true"
                  aria-owns="menu-list-grow"
                  className="MuiButtonBase-root-8 MuiIconButton-root-2"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <span
                    className="MuiIconButton-label-7"
                  >
                    <pure(PlaylistAddIcon)>
                      <PlaylistAddIcon>
                        <WithStyles(SvgIcon)>
                          <SvgIcon
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction-14",
                                "colorDisabled": "MuiSvgIcon-colorDisabled-16",
                                "colorError": "MuiSvgIcon-colorError-15",
                                "colorPrimary": "MuiSvgIcon-colorPrimary-12",
                                "colorSecondary": "MuiSvgIcon-colorSecondary-13",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-17",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-19",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-18",
                                "root": "MuiSvgIcon-root-11",
                              }
                            }
                            color="inherit"
                            component="svg"
                            fontSize="default"
                            viewBox="0 0 24 24"
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root-11"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M0 0h24v24H0z"
                                fill="none"
                              />
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </SvgIcon>
                        </WithStyles(SvgIcon)>
                      </PlaylistAddIcon>
                    </pure(PlaylistAddIcon)>
                  </span>
                  <NoSsr
                    defer={false}
                    fallback={null}
                  >
                    <WithStyles(TouchRipple)
                      center={true}
                      innerRef={[Function]}
                    >
                      <TouchRipple
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child-24",
                            "childLeaving": "MuiTouchRipple-childLeaving-25",
                            "childPulsate": "MuiTouchRipple-childPulsate-26",
                            "ripple": "MuiTouchRipple-ripple-21",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-23",
                            "rippleVisible": "MuiTouchRipple-rippleVisible-22",
                            "root": "MuiTouchRipple-root-20",
                          }
                        }
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          className="MuiTouchRipple-root-20"
                          component="span"
                          enter={true}
                          exit={true}
                        >
                          <span
                            className="MuiTouchRipple-root-20"
                          />
                        </TransitionGroup>
                      </TouchRipple>
                    </WithStyles(TouchRipple)>
                  </NoSsr>
                </button>
              </ButtonBase>
            </WithStyles(ButtonBase)>
          </IconButton>
        </WithStyles(IconButton)>
        <Popper
          anchorEl={
            <button
              aria-haspopup="true"
              aria-owns="menu-list-grow"
              class="MuiButtonBase-root-8 MuiIconButton-root-2"
              tabindex="0"
              type="button"
            >
              <span
                class="MuiIconButton-label-7"
              >
                <svg
                  aria-hidden="true"
                  class="MuiSvgIcon-root-11"
                  focusable="false"
                  role="presentation"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M0 0h24v24H0z"
                    fill="none"
                  />
                  <path
                    d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                  />
                </svg>
              </span>
              <span
                class="MuiTouchRipple-root-20"
              />
            </button>
          }
          disablePortal={false}
          open={true}
          placement="bottom"
          transition={true}
        >
          <Portal
            disablePortal={false}
            onRendered={[Function]}
          >
            <Portal
              containerInfo={
                <body>
                  <div
                    role="tooltip"
                    style="position: absolute;"
                  >
                    <div
                      class="MuiPaper-root-27 MuiPaper-elevation2-31 MuiPaper-rounded-28"
                      id="menu-list-grow"
                      style="opacity: 1; transform: scale(1, 1); transform-origin: center top; transition: opacity 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,transform 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                    >
                      <ul
                        class="MuiList-root-54 MuiList-padding-55"
                        role="menu"
                      >
                        <li
                          class="MuiButtonBase-root-8 MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                          role="menuitem"
                          tabindex="0"
                        >
                          Death metal
                          <span
                            class="MuiTouchRipple-root-20"
                          />
                        </li>
                        <li
                          class="MuiButtonBase-root-8 MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                          role="menuitem"
                          tabindex="-1"
                        >
                          Trance
                          <span
                            class="MuiTouchRipple-root-20"
                          />
                        </li>
                        <hr
                          class="MuiDivider-root-73"
                          tabindex="-1"
                        />
                        <li
                          class="MuiButtonBase-root-8 MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                          role="menuitem"
                          tabindex="-1"
                        >
                          <a
                            class="AddToPlaylist-link-1"
                            href="/playlists/add"
                          >
                            <svg
                              aria-hidden="true"
                              class="MuiSvgIcon-root-11"
                              focusable="false"
                              role="presentation"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M0 0h24v24H0V0z"
                                fill="none"
                              />
                              <path
                                d="M2 6h12v2H2zM2 10h12v2H2zM2 14h8v2H2zM16.01 17L13 14l-1.5 1.5 4.51 4.5L23 13l-1.5-1.5z"
                              />
                            </svg>
                             new
                          </a>
                          <span
                            class="MuiTouchRipple-root-20"
                          />
                        </li>
                      </ul>
                    </div>
                  </div>
                </body>
              }
            >
              <div
                role="tooltip"
                style={
                  Object {
                    "position": "absolute",
                  }
                }
              >
                <WithTheme(Grow)
                  id="menu-list-grow"
                  in={true}
                  onExited={[Function]}
                  style={
                    Object {
                      "transformOrigin": "center top",
                    }
                  }
                >
                  <Grow
                    id="menu-list-grow"
                    in={true}
                    onExited={[Function]}
                    style={
                      Object {
                        "transformOrigin": "center top",
                      }
                    }
                    theme={
                      Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "lineHeight": "1.46429em",
                          },
                          "body1Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "lineHeight": "1.71429em",
                          },
                          "body2Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.5,
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "textTransform": "uppercase",
                          },
                          "buttonNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "lineHeight": "1.375em",
                          },
                          "captionNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "display1": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.20588em",
                          },
                          "display2": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.8125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.13333em",
                            "marginLeft": "-.02em",
                          },
                          "display3": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "-.02em",
                            "lineHeight": "1.30357em",
                            "marginLeft": "-.02em",
                          },
                          "display4": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "7rem",
                            "fontWeight": 300,
                            "letterSpacing": "-.04em",
                            "lineHeight": "1.14286em",
                            "marginLeft": "-.04em",
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "headline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "lineHeight": "1.35417em",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subheading": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "lineHeight": "1.5em",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                          "title": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.3125rem",
                            "fontWeight": 500,
                            "lineHeight": "1.16667em",
                          },
                          "useNextVariants": false,
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "tooltip": 1500,
                        },
                      }
                    }
                    timeout="auto"
                  >
                    <Transition
                      addEndListener={[Function]}
                      appear={true}
                      enter={true}
                      exit={true}
                      id="menu-list-grow"
                      in={true}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={null}
                      unmountOnExit={false}
                    >
                      <WithStyles(Paper)
                        id="menu-list-grow"
                        style={
                          Object {
                            "opacity": 1,
                            "transform": "scale(1, 1)",
                            "transformOrigin": "center top",
                          }
                        }
                      >
                        <Paper
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0-29",
                              "elevation1": "MuiPaper-elevation1-30",
                              "elevation10": "MuiPaper-elevation10-39",
                              "elevation11": "MuiPaper-elevation11-40",
                              "elevation12": "MuiPaper-elevation12-41",
                              "elevation13": "MuiPaper-elevation13-42",
                              "elevation14": "MuiPaper-elevation14-43",
                              "elevation15": "MuiPaper-elevation15-44",
                              "elevation16": "MuiPaper-elevation16-45",
                              "elevation17": "MuiPaper-elevation17-46",
                              "elevation18": "MuiPaper-elevation18-47",
                              "elevation19": "MuiPaper-elevation19-48",
                              "elevation2": "MuiPaper-elevation2-31",
                              "elevation20": "MuiPaper-elevation20-49",
                              "elevation21": "MuiPaper-elevation21-50",
                              "elevation22": "MuiPaper-elevation22-51",
                              "elevation23": "MuiPaper-elevation23-52",
                              "elevation24": "MuiPaper-elevation24-53",
                              "elevation3": "MuiPaper-elevation3-32",
                              "elevation4": "MuiPaper-elevation4-33",
                              "elevation5": "MuiPaper-elevation5-34",
                              "elevation6": "MuiPaper-elevation6-35",
                              "elevation7": "MuiPaper-elevation7-36",
                              "elevation8": "MuiPaper-elevation8-37",
                              "elevation9": "MuiPaper-elevation9-38",
                              "root": "MuiPaper-root-27",
                              "rounded": "MuiPaper-rounded-28",
                            }
                          }
                          component="div"
                          elevation={2}
                          id="menu-list-grow"
                          square={false}
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "scale(1, 1)",
                              "transformOrigin": "center top",
                            }
                          }
                        >
                          <div
                            className="MuiPaper-root-27 MuiPaper-elevation2-31 MuiPaper-rounded-28"
                            id="menu-list-grow"
                            style={
                              Object {
                                "opacity": 1,
                                "transform": "scale(1, 1)",
                                "transformOrigin": "center top",
                              }
                            }
                          >
                            <ClickAwayListener
                              mouseEvent="onMouseUp"
                              onClickAway={[Function]}
                              touchEvent="onTouchEnd"
                            >
                              <MenuList
                                disableListWrap={false}
                              >
                                <WithStyles(List)
                                  onBlur={[Function]}
                                  onKeyDown={[Function]}
                                  role="menu"
                                >
                                  <List
                                    classes={
                                      Object {
                                        "dense": "MuiList-dense-56",
                                        "padding": "MuiList-padding-55",
                                        "root": "MuiList-root-54",
                                        "subheader": "MuiList-subheader-57",
                                      }
                                    }
                                    component="ul"
                                    dense={false}
                                    disablePadding={false}
                                    onBlur={[Function]}
                                    onKeyDown={[Function]}
                                    role="menu"
                                  >
                                    <ul
                                      className="MuiList-root-54 MuiList-padding-55"
                                      onBlur={[Function]}
                                      onKeyDown={[Function]}
                                      role="menu"
                                    >
                                      <WithStyles(MenuItem)
                                        key=".0:$1"
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={0}
                                      >
                                        <MenuItem
                                          classes={
                                            Object {
                                              "gutters": "MuiMenuItem-gutters-59",
                                              "root": "MuiMenuItem-root-58",
                                              "selected": "MuiMenuItem-selected-60",
                                            }
                                          }
                                          component="li"
                                          disableGutters={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          role="menuitem"
                                          tabIndex={0}
                                        >
                                          <WithStyles(ListItem)
                                            button={true}
                                            className="MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                            component="li"
                                            disableGutters={false}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            role="menuitem"
                                            tabIndex={0}
                                          >
                                            <ListItem
                                              ContainerComponent="li"
                                              alignItems="center"
                                              button={true}
                                              className="MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart-66",
                                                  "button": "MuiListItem-button-70",
                                                  "container": "MuiListItem-container-62",
                                                  "default": "MuiListItem-default-64",
                                                  "dense": "MuiListItem-dense-65",
                                                  "disabled": "MuiListItem-disabled-67",
                                                  "divider": "MuiListItem-divider-68",
                                                  "focusVisible": "MuiListItem-focusVisible-63",
                                                  "gutters": "MuiListItem-gutters-69",
                                                  "root": "MuiListItem-root-61",
                                                  "secondaryAction": "MuiListItem-secondaryAction-71",
                                                  "selected": "MuiListItem-selected-72",
                                                }
                                              }
                                              component="li"
                                              dense={false}
                                              disableGutters={false}
                                              disabled={false}
                                              divider={false}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              role="menuitem"
                                              selected={false}
                                              tabIndex={0}
                                            >
                                              <MergeListContext
                                                alignItems="center"
                                                dense={false}
                                              >
                                                <WithStyles(ButtonBase)
                                                  className="MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                  component="li"
                                                  disabled={false}
                                                  focusVisibleClassName="MuiListItem-focusVisible-63"
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <ButtonBase
                                                    centerRipple={false}
                                                    className="MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiButtonBase-disabled-9",
                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                        "root": "MuiButtonBase-root-8",
                                                      }
                                                    }
                                                    component="li"
                                                    disableRipple={false}
                                                    disableTouchRipple={false}
                                                    disabled={false}
                                                    focusRipple={false}
                                                    focusVisibleClassName="MuiListItem-focusVisible-63"
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <li
                                                      className="MuiButtonBase-root-8 MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onContextMenu={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      Death metal
                                                      <NoSsr
                                                        defer={false}
                                                        fallback={null}
                                                      >
                                                        <WithStyles(TouchRipple)
                                                          center={false}
                                                          innerRef={[Function]}
                                                        >
                                                          <TouchRipple
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child-24",
                                                                "childLeaving": "MuiTouchRipple-childLeaving-25",
                                                                "childPulsate": "MuiTouchRipple-childPulsate-26",
                                                                "ripple": "MuiTouchRipple-ripple-21",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-23",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-22",
                                                                "root": "MuiTouchRipple-root-20",
                                                              }
                                                            }
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              className="MuiTouchRipple-root-20"
                                                              component="span"
                                                              enter={true}
                                                              exit={true}
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root-20"
                                                              />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </li>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </MergeListContext>
                                            </ListItem>
                                          </WithStyles(ListItem)>
                                        </MenuItem>
                                      </WithStyles(MenuItem)>
                                      <WithStyles(MenuItem)
                                        key=".0:$2"
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={-1}
                                      >
                                        <MenuItem
                                          classes={
                                            Object {
                                              "gutters": "MuiMenuItem-gutters-59",
                                              "root": "MuiMenuItem-root-58",
                                              "selected": "MuiMenuItem-selected-60",
                                            }
                                          }
                                          component="li"
                                          disableGutters={false}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ListItem)
                                            button={true}
                                            className="MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                            component="li"
                                            disableGutters={false}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            <ListItem
                                              ContainerComponent="li"
                                              alignItems="center"
                                              button={true}
                                              className="MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart-66",
                                                  "button": "MuiListItem-button-70",
                                                  "container": "MuiListItem-container-62",
                                                  "default": "MuiListItem-default-64",
                                                  "dense": "MuiListItem-dense-65",
                                                  "disabled": "MuiListItem-disabled-67",
                                                  "divider": "MuiListItem-divider-68",
                                                  "focusVisible": "MuiListItem-focusVisible-63",
                                                  "gutters": "MuiListItem-gutters-69",
                                                  "root": "MuiListItem-root-61",
                                                  "secondaryAction": "MuiListItem-secondaryAction-71",
                                                  "selected": "MuiListItem-selected-72",
                                                }
                                              }
                                              component="li"
                                              dense={false}
                                              disableGutters={false}
                                              disabled={false}
                                              divider={false}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              role="menuitem"
                                              selected={false}
                                              tabIndex={-1}
                                            >
                                              <MergeListContext
                                                alignItems="center"
                                                dense={false}
                                              >
                                                <WithStyles(ButtonBase)
                                                  className="MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                  component="li"
                                                  disabled={false}
                                                  focusVisibleClassName="MuiListItem-focusVisible-63"
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <ButtonBase
                                                    centerRipple={false}
                                                    className="MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiButtonBase-disabled-9",
                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                        "root": "MuiButtonBase-root-8",
                                                      }
                                                    }
                                                    component="li"
                                                    disableRipple={false}
                                                    disableTouchRipple={false}
                                                    disabled={false}
                                                    focusRipple={false}
                                                    focusVisibleClassName="MuiListItem-focusVisible-63"
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                    type="button"
                                                  >
                                                    <li
                                                      className="MuiButtonBase-root-8 MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onContextMenu={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      Trance
                                                      <NoSsr
                                                        defer={false}
                                                        fallback={null}
                                                      >
                                                        <WithStyles(TouchRipple)
                                                          center={false}
                                                          innerRef={[Function]}
                                                        >
                                                          <TouchRipple
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child-24",
                                                                "childLeaving": "MuiTouchRipple-childLeaving-25",
                                                                "childPulsate": "MuiTouchRipple-childPulsate-26",
                                                                "ripple": "MuiTouchRipple-ripple-21",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-23",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-22",
                                                                "root": "MuiTouchRipple-root-20",
                                                              }
                                                            }
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              className="MuiTouchRipple-root-20"
                                                              component="span"
                                                              enter={true}
                                                              exit={true}
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root-20"
                                                              />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </li>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </MergeListContext>
                                            </ListItem>
                                          </WithStyles(ListItem)>
                                        </MenuItem>
                                      </WithStyles(MenuItem)>
                                      <WithStyles(Divider)
                                        key=".1"
                                        onFocus={[Function]}
                                        tabIndex={-1}
                                      >
                                        <Divider
                                          absolute={false}
                                          classes={
                                            Object {
                                              "absolute": "MuiDivider-absolute-74",
                                              "inset": "MuiDivider-inset-75",
                                              "light": "MuiDivider-light-76",
                                              "middle": "MuiDivider-middle-77",
                                              "root": "MuiDivider-root-73",
                                            }
                                          }
                                          component="hr"
                                          light={false}
                                          onFocus={[Function]}
                                          tabIndex={-1}
                                          variant="fullWidth"
                                        >
                                          <hr
                                            className="MuiDivider-root-73"
                                            onFocus={[Function]}
                                            tabIndex={-1}
                                          />
                                        </Divider>
                                      </WithStyles(Divider)>
                                      <WithStyles(MenuItem)
                                        key=".2"
                                        onFocus={[Function]}
                                        tabIndex={-1}
                                      >
                                        <MenuItem
                                          classes={
                                            Object {
                                              "gutters": "MuiMenuItem-gutters-59",
                                              "root": "MuiMenuItem-root-58",
                                              "selected": "MuiMenuItem-selected-60",
                                            }
                                          }
                                          component="li"
                                          disableGutters={false}
                                          onFocus={[Function]}
                                          role="menuitem"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ListItem)
                                            button={true}
                                            className="MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                            component="li"
                                            disableGutters={false}
                                            onFocus={[Function]}
                                            role="menuitem"
                                            tabIndex={-1}
                                          >
                                            <ListItem
                                              ContainerComponent="li"
                                              alignItems="center"
                                              button={true}
                                              className="MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart-66",
                                                  "button": "MuiListItem-button-70",
                                                  "container": "MuiListItem-container-62",
                                                  "default": "MuiListItem-default-64",
                                                  "dense": "MuiListItem-dense-65",
                                                  "disabled": "MuiListItem-disabled-67",
                                                  "divider": "MuiListItem-divider-68",
                                                  "focusVisible": "MuiListItem-focusVisible-63",
                                                  "gutters": "MuiListItem-gutters-69",
                                                  "root": "MuiListItem-root-61",
                                                  "secondaryAction": "MuiListItem-secondaryAction-71",
                                                  "selected": "MuiListItem-selected-72",
                                                }
                                              }
                                              component="li"
                                              dense={false}
                                              disableGutters={false}
                                              disabled={false}
                                              divider={false}
                                              onFocus={[Function]}
                                              role="menuitem"
                                              selected={false}
                                              tabIndex={-1}
                                            >
                                              <MergeListContext
                                                alignItems="center"
                                                dense={false}
                                              >
                                                <WithStyles(ButtonBase)
                                                  className="MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                  component="li"
                                                  disabled={false}
                                                  focusVisibleClassName="MuiListItem-focusVisible-63"
                                                  onFocus={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <ButtonBase
                                                    centerRipple={false}
                                                    className="MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiButtonBase-disabled-9",
                                                        "focusVisible": "MuiButtonBase-focusVisible-10",
                                                        "root": "MuiButtonBase-root-8",
                                                      }
                                                    }
                                                    component="li"
                                                    disableRipple={false}
                                                    disableTouchRipple={false}
                                                    disabled={false}
                                                    focusRipple={false}
                                                    focusVisibleClassName="MuiListItem-focusVisible-63"
                                                    onFocus={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                    type="button"
                                                  >
                                                    <li
                                                      className="MuiButtonBase-root-8 MuiListItem-root-61 MuiListItem-default-64 MuiListItem-gutters-69 MuiListItem-button-70 MuiMenuItem-root-58 MuiMenuItem-gutters-59"
                                                      onBlur={[Function]}
                                                      onContextMenu={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <Link
                                                        className="AddToPlaylist-link-1"
                                                        key=".0"
                                                        to="/playlists/add"
                                                      >
                                                        <a
                                                          className="AddToPlaylist-link-1"
                                                          href="/playlists/add"
                                                          onClick={[Function]}
                                                        >
                                                          <pure(PlaylistAddCheckTwoToneIcon)>
                                                            <PlaylistAddCheckTwoToneIcon>
                                                              <WithStyles(SvgIcon)>
                                                                <SvgIcon
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction-14",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled-16",
                                                                      "colorError": "MuiSvgIcon-colorError-15",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary-12",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary-13",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-17",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-19",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-18",
                                                                      "root": "MuiSvgIcon-root-11",
                                                                    }
                                                                  }
                                                                  color="inherit"
                                                                  component="svg"
                                                                  fontSize="default"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root-11"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M0 0h24v24H0V0z"
                                                                      fill="none"
                                                                    />
                                                                    <path
                                                                      d="M2 6h12v2H2zM2 10h12v2H2zM2 14h8v2H2zM16.01 17L13 14l-1.5 1.5 4.51 4.5L23 13l-1.5-1.5z"
                                                                    />
                                                                  </svg>
                                                                </SvgIcon>
                                                              </WithStyles(SvgIcon)>
                                                            </PlaylistAddCheckTwoToneIcon>
                                                          </pure(PlaylistAddCheckTwoToneIcon)>
                                                           new
                                                        </a>
                                                      </Link>
                                                      <NoSsr
                                                        defer={false}
                                                        fallback={null}
                                                      >
                                                        <WithStyles(TouchRipple)
                                                          center={false}
                                                          innerRef={[Function]}
                                                        >
                                                          <TouchRipple
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child-24",
                                                                "childLeaving": "MuiTouchRipple-childLeaving-25",
                                                                "childPulsate": "MuiTouchRipple-childPulsate-26",
                                                                "ripple": "MuiTouchRipple-ripple-21",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate-23",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible-22",
                                                                "root": "MuiTouchRipple-root-20",
                                                              }
                                                            }
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              className="MuiTouchRipple-root-20"
                                                              component="span"
                                                              enter={true}
                                                              exit={true}
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root-20"
                                                              />
                                                            </TransitionGroup>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </li>
                                                  </ButtonBase>
                                                </WithStyles(ButtonBase)>
                                              </MergeListContext>
                                            </ListItem>
                                          </WithStyles(ListItem)>
                                        </MenuItem>
                                      </WithStyles(MenuItem)>
                                    </ul>
                                  </List>
                                </WithStyles(List)>
                              </MenuList>
                              <EventListener
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                target="document"
                              />
                            </ClickAwayListener>
                          </div>
                        </Paper>
                      </WithStyles(Paper)>
                    </Transition>
                  </Grow>
                </WithTheme(Grow)>
              </div>
            </Portal>
          </Portal>
        </Popper>
      </div>
    </AddToPlaylist>
  </WithStyles(AddToPlaylist)>
</Router>
`;
